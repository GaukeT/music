{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/slide-toggle\";\nimport * as i2 from \"@angular/material/button-toggle\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/select\";\nimport * as i9 from \"@angular/material/core\";\n\nfunction AppComponent_mat_button_toggle_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-button-toggle\", 17);\n    i0.ɵɵlistener(\"click\", function AppComponent_mat_button_toggle_10_Template_mat_button_toggle_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const note_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.setValue(note_r4);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const note_r4 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", note_r4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(note_r4);\n  }\n}\n\nfunction AppComponent_th_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"th\", 18);\n    i0.ɵɵlistener(\"click\", function AppComponent_th_17_Template_th_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const header_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.addChord(header_r7);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const header_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(header_r7);\n  }\n}\n\nfunction AppComponent_td_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 18);\n    i0.ɵɵlistener(\"click\", function AppComponent_td_20_Template_td_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r12);\n      const chord_r10 = restoredCtx.$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.addChord(chord_r10);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const chord_r10 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", chord_r10, \"\");\n  }\n}\n\nfunction AppComponent_mat_optgroup_50_mat_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 2);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const example_r15 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", example_r15.progression);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(example_r15.name);\n  }\n}\n\nfunction AppComponent_mat_optgroup_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-optgroup\", 19);\n    i0.ɵɵtemplate(1, AppComponent_mat_optgroup_50_mat_option_1_Template, 2, 2, \"mat-option\", 20);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const group_r13 = ctx.$implicit;\n    i0.ɵɵproperty(\"label\", group_r13.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", group_r13.examples);\n  }\n}\n\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor() {\n      this.title = 'Music';\n      this.selected = 3;\n      this.useSharps = false;\n      this.useMajor = true;\n      this.minorMajor = this.calculateMajorKey;\n      this.selectedKey = 'major';\n      this.sharps = ['A', 'A#', 'B', 'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#'];\n      this.flats = ['A', 'B♭', 'B', 'C', 'D♭', 'D', 'E♭', 'E', 'F', 'G♭', 'G', 'A♭'];\n      this.notes = [];\n      this.chords = [];\n      this.majorPattern = ['I', 'ii', 'iii', 'IV', 'V', 'vi', 'vii'];\n      this.minorPattern = ['i', 'ii', 'III', 'iv', 'v', 'VI', 'VII'];\n      this.selectedPattern = [];\n      this.examples = [{\n        name: 'Major',\n        examples: [{\n          progression: \"I I I I / IV IV I I / V IV I I \",\n          name: \"12 Bar Blues\"\n        }, {\n          progression: \"I V vi iii / IV I IV V \",\n          name: \"Canon\"\n        }, {\n          progression: \"I V vi IV \",\n          name: \"I-V-vi-IV\"\n        }]\n      }, {\n        name: 'Minor',\n        examples: [{\n          progression: \"i VI III VII \",\n          name: \"i-VI-III-VII\"\n        }]\n      } // {\n      //   name: 'Saved',\n      //   examples: []\n      // }\n      ];\n      this.selectedExample = '';\n      this.progression = '';\n      this.created = '';\n    }\n\n    ngOnInit() {\n      this.setUseSharps();\n    } // user uses flat / sharp toggle\n\n\n    setUseSharps() {\n      this.useSharps = !this.useSharps;\n      this.notes = this.useSharps ? this.sharps : this.flats;\n      this.update();\n    } // user uses minor / major toggle\n\n\n    setUseMajor() {\n      this.useMajor = !this.useMajor;\n      this.minorMajor = this.useMajor ? this.calculateMajorKey : this.calculateMinorKey;\n      this.update();\n    } // user makes choice\n\n\n    setValue(value) {\n      this.selected = this.notes.indexOf(value);\n      this.update();\n    } // updates data on switch\n\n\n    update() {\n      this.minorMajor(this.selected);\n      this.progressionOnChange();\n      this.selectedKey = this.useMajor ? 'major' : 'natural minor';\n      this.selectedPattern = this.useMajor ? this.majorPattern : this.minorPattern;\n    }\n\n    calculateMajorKey(selected) {\n      this.chords = [];\n      this.chords[0] = this.notes[selected];\n      this.chords[1] = this.notes[(selected + 2) % 12] + 'm';\n      this.chords[2] = this.notes[(selected + 4) % 12] + 'm';\n      this.chords[3] = this.notes[(selected + 5) % 12];\n      this.chords[4] = this.notes[(selected + 7) % 12];\n      this.chords[5] = this.notes[(selected + 9) % 12] + 'm';\n      this.chords[6] = this.notes[(selected + 11) % 12] + '°';\n    }\n\n    calculateMinorKey(selected) {\n      this.chords = [];\n      this.chords[0] = this.notes[selected] + 'm';\n      this.chords[1] = this.notes[(selected + 2) % 12] + '°';\n      this.chords[2] = this.notes[(selected + 3) % 12];\n      this.chords[3] = this.notes[(selected + 5) % 12] + 'm';\n      this.chords[4] = this.notes[(selected + 7) % 12] + 'm';\n      this.chords[5] = this.notes[(selected + 8) % 12];\n      this.chords[6] = this.notes[(selected + 10) % 12];\n    } // user types roman numerals 1-7 \n\n\n    progressionOnChange() {\n      if (this.progression) {\n        this.created = '| ';\n        let splitted = this.progression.trim().split(' ');\n        splitted.forEach(c => {\n          this.created += this.findChord(c) + ' | ';\n        });\n      } else {\n        this.created = '';\n        this.selectedExample = '';\n      }\n    } // converts roman numeral to chord\n\n\n    findChord(chord) {\n      switch (chord.toLowerCase()) {\n        case 'i':\n          return this.chords[0];\n\n        case 'ii':\n          return this.chords[1];\n\n        case 'iii':\n          return this.chords[2];\n\n        case 'iv':\n          return this.chords[3];\n\n        case 'v':\n          return this.chords[4];\n\n        case 'vi':\n          return this.chords[5];\n\n        case 'vii':\n          return this.chords[6];\n\n        case '/':\n          return '<br>';\n\n        case '//':\n          return '<br><br>';\n      }\n\n      return '';\n    } // user clicks on chords in key\n\n\n    addChord(chord) {\n      if (chord.match(\"(^[a-gA-G][#♭m°]{0,2}$)\")) {\n        let index = this.chords.indexOf(chord);\n\n        if (index >= 0) {\n          chord = this.selectedPattern[index];\n        }\n      }\n\n      this.progression += chord + ' ';\n      this.progressionOnChange();\n    }\n\n    addLineBreak() {\n      if (this.progression.endsWith('/ ')) {\n        this.progression = this.progression.slice(0, -1) + '/ ';\n      } else {\n        this.progression += '/ ';\n      }\n    }\n\n    saveProgression() {\n      if (this.progression) {//this.examples[2].examples.push({progression: this.progression, name: 'Saved ' + this.examples[2].examples.length})\n      }\n    }\n\n    viewExample(selected) {\n      this.progression = selected;\n      this.progressionOnChange();\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)();\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 51,\n    vars: 15,\n    consts: [[1, \"content\"], [3, \"checked\", \"toggleChange\"], [3, \"value\"], [3, \"value\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"progressions-section\"], [\"appearance\", \"standard\", 1, \"input-chord-progression\"], [\"matInput\", \"\", \"type\", \"text\", 3, \"ngModel\", \"ngModelChange\", \"input\"], [\"align\", \"start\"], [\"align\", \"end\"], [\"disabled\", \"\", \"mat-button\", \"\", \"matSuffix\", \"\", \"aria-label\", \"Save\", 3, \"click\"], [\"mat-button\", \"\", \"matSuffix\", \"\", \"aria-label\", \"Clear\", 3, \"disabled\", \"click\"], [\"mat-button\", \"\", \"matSuffix\", \"\", \"aria-label\", \"Enter\", 3, \"disabled\", \"click\"], [3, \"innerHtml\"], [\"appearance\", \"fill\"], [\"name\", \"progression\", 3, \"ngModel\", \"ngModelChange\", \"selectionChange\"], [3, \"label\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"click\"], [3, \"click\"], [3, \"label\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"span\")(4, \"mat-slide-toggle\", 1);\n        i0.ɵɵlistener(\"toggleChange\", function AppComponent_Template_mat_slide_toggle_toggleChange_4_listener() {\n          return ctx.setUseSharps();\n        });\n        i0.ɵɵtext(5, \" flat / sharp \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"mat-slide-toggle\", 1);\n        i0.ɵɵlistener(\"toggleChange\", function AppComponent_Template_mat_slide_toggle_toggleChange_6_listener() {\n          return ctx.setUseMajor();\n        });\n        i0.ɵɵtext(7, \" minor / major \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(8, \"br\");\n        i0.ɵɵelementStart(9, \"mat-button-toggle-group\", 2);\n        i0.ɵɵtemplate(10, AppComponent_mat_button_toggle_10_Template, 2, 2, \"mat-button-toggle\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"br\");\n        i0.ɵɵelementStart(12, \"p\");\n        i0.ɵɵtext(13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"table\")(15, \"thead\")(16, \"tr\");\n        i0.ɵɵtemplate(17, AppComponent_th_17_Template, 2, 1, \"th\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"tbody\")(19, \"tr\");\n        i0.ɵɵtemplate(20, AppComponent_td_20_Template, 2, 1, \"td\", 4);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(21, \"div\", 5)(22, \"div\", 0)(23, \"span\")(24, \"mat-form-field\", 6)(25, \"mat-label\");\n        i0.ɵɵtext(26, \"Create your own chord progression\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_27_listener($event) {\n          return ctx.progression = $event;\n        })(\"input\", function AppComponent_Template_input_input_27_listener() {\n          return ctx.progressionOnChange();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"mat-hint\", 8);\n        i0.ɵɵtext(29, \"e.g. I V vi IV\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"mat-hint\", 9);\n        i0.ɵɵtext(31, \"use space to separate chords\");\n        i0.ɵɵelement(32, \"br\");\n        i0.ɵɵtext(33, \" use / for new line\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(34, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_34_listener() {\n          return ctx.saveProgression();\n        });\n        i0.ɵɵelementStart(35, \"mat-icon\");\n        i0.ɵɵtext(36, \"done\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(37, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_37_listener() {\n          ctx.progression = \"\";\n          ctx.created = \"\";\n          return ctx.selectedExample = \"\";\n        });\n        i0.ɵɵelementStart(38, \"mat-icon\");\n        i0.ɵɵtext(39, \"close\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(40, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_40_listener() {\n          return ctx.addLineBreak();\n        });\n        i0.ɵɵelementStart(41, \"mat-icon\");\n        i0.ɵɵtext(42, \"subdirectory_arrow_left\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(43, \"br\")(44, \"br\")(45, \"h3\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"mat-form-field\", 14)(47, \"mat-label\");\n        i0.ɵɵtext(48, \"Find an example\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"mat-select\", 15);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_mat_select_ngModelChange_49_listener($event) {\n          return ctx.selectedExample = $event;\n        })(\"selectionChange\", function AppComponent_Template_mat_select_selectionChange_49_listener() {\n          return ctx.viewExample(ctx.selectedExample);\n        });\n        i0.ɵɵtemplate(50, AppComponent_mat_optgroup_50_Template, 2, 2, \"mat-optgroup\", 16);\n        i0.ɵɵelementEnd()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.title);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"checked\", ctx.useSharps);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"checked\", ctx.useMajor);\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"value\", ctx.notes[ctx.selected]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.notes);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate2(\"Chords in the key of \", ctx.notes[ctx.selected], \" \", ctx.selectedKey, \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.selectedPattern);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.chords);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.progression);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"disabled\", !ctx.progression);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !ctx.progression);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"innerHtml\", ctx.created, i0.ɵɵsanitizeHtml);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedExample);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.examples);\n      }\n    },\n    directives: [i1.MatSlideToggle, i2.MatButtonToggleGroup, i3.NgForOf, i2.MatButtonToggle, i4.MatFormField, i4.MatLabel, i5.MatInput, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgModel, i4.MatHint, i4.MatSuffix, i7.MatIcon, i8.MatSelect, i9.MatOptgroup, i9.MatOption],\n    styles: [\".content[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;width:100%}.progressions-section[_ngcontent-%COMP%]{margin:32px auto;width:60%;display:flex;flex-direction:row}table[_ngcontent-%COMP%]{border-collapse:collapse;width:75%;table-layout:fixed}td[_ngcontent-%COMP%], th[_ngcontent-%COMP%]{border:1px solid rgba(0,0,0,.09);padding:.5rem;text-align:center}mat-slide-toggle[_ngcontent-%COMP%]{padding-left:24px}.input-chord-progression[_ngcontent-%COMP%]{min-width:280px}select[_ngcontent-%COMP%]{margin-top:32px}button[_ngcontent-%COMP%]{margin-left:4px}\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}